name: CI/CD
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: lib
          path: lib

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
        #  - windows-latest # to be uncommented when we drop multi-process mode
        node: 
          - '8'
          - '10'
          - '12'
        packages:
          - webpack@^5.0.0-alpha.5 ts-loader@^5.0.0 vue-loader@^15.2.4
          - webpack@^4.0.0 ts-loader@^5.0.0 vue-loader@^15.2.4
          - webpack@^3.10.0 ts-loader@^3.4.0 vue-loader@^13.5.0
          - webpack@^2.7.0 ts-loader@^3.4.0 vue-loader@^13.5.0

    steps:
    - uses: actions/checkout@v1
      
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node }}-yarn-
      
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Replace dependencies
      run: yarn add ${{ matrix.packages }} -D

    - name: Download build artifact
      uses: actions/download-artifact@v1
      with:
        name: lib
      
    - name: Run unit tests
      run: yarn test:unit
      
    - name: Run integration tests
      run: yarn test:integration
      
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PERSONAL_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    needs: [build, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta')
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: lib

      - name: Release
        run: yarn exec semantic-release
